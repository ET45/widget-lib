// Generated by view binder compiler. Do not edit!
package com.essent.widget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.essent.widget.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WidgetLayoutLargeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView barChart;

  @NonNull
  public final TextView highestText;

  @NonNull
  public final ImageView light;

  @NonNull
  public final TextView lowestHour;

  @NonNull
  public final TextView lowestText;

  @NonNull
  public final TextView priceMin;

  @NonNull
  public final TextView priceToday;

  @NonNull
  public final TextView timeRange;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView unitHigh;

  @NonNull
  public final TextView unitLow;

  @NonNull
  public final LinearLayout widgetRoot;

  private WidgetLayoutLargeBinding(@NonNull LinearLayout rootView, @NonNull ImageView barChart,
      @NonNull TextView highestText, @NonNull ImageView light, @NonNull TextView lowestHour,
      @NonNull TextView lowestText, @NonNull TextView priceMin, @NonNull TextView priceToday,
      @NonNull TextView timeRange, @NonNull TextView title, @NonNull TextView unitHigh,
      @NonNull TextView unitLow, @NonNull LinearLayout widgetRoot) {
    this.rootView = rootView;
    this.barChart = barChart;
    this.highestText = highestText;
    this.light = light;
    this.lowestHour = lowestHour;
    this.lowestText = lowestText;
    this.priceMin = priceMin;
    this.priceToday = priceToday;
    this.timeRange = timeRange;
    this.title = title;
    this.unitHigh = unitHigh;
    this.unitLow = unitLow;
    this.widgetRoot = widgetRoot;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WidgetLayoutLargeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WidgetLayoutLargeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.widget_layout_large, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WidgetLayoutLargeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barChart;
      ImageView barChart = ViewBindings.findChildViewById(rootView, id);
      if (barChart == null) {
        break missingId;
      }

      id = R.id.highestText;
      TextView highestText = ViewBindings.findChildViewById(rootView, id);
      if (highestText == null) {
        break missingId;
      }

      id = R.id.light;
      ImageView light = ViewBindings.findChildViewById(rootView, id);
      if (light == null) {
        break missingId;
      }

      id = R.id.lowest_hour;
      TextView lowestHour = ViewBindings.findChildViewById(rootView, id);
      if (lowestHour == null) {
        break missingId;
      }

      id = R.id.lowestText;
      TextView lowestText = ViewBindings.findChildViewById(rootView, id);
      if (lowestText == null) {
        break missingId;
      }

      id = R.id.price_min;
      TextView priceMin = ViewBindings.findChildViewById(rootView, id);
      if (priceMin == null) {
        break missingId;
      }

      id = R.id.price_today;
      TextView priceToday = ViewBindings.findChildViewById(rootView, id);
      if (priceToday == null) {
        break missingId;
      }

      id = R.id.time_range;
      TextView timeRange = ViewBindings.findChildViewById(rootView, id);
      if (timeRange == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.unitHigh;
      TextView unitHigh = ViewBindings.findChildViewById(rootView, id);
      if (unitHigh == null) {
        break missingId;
      }

      id = R.id.unitLow;
      TextView unitLow = ViewBindings.findChildViewById(rootView, id);
      if (unitLow == null) {
        break missingId;
      }

      LinearLayout widgetRoot = (LinearLayout) rootView;

      return new WidgetLayoutLargeBinding((LinearLayout) rootView, barChart, highestText, light,
          lowestHour, lowestText, priceMin, priceToday, timeRange, title, unitHigh, unitLow,
          widgetRoot);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
